trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  vmImageName: 'windows-latest'

stages:
- stage: Build
  displayName: Blazor App Build Stage

  jobs:
  - job: Build
    displayName: Blazor App Build Job
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NuGetToolInstaller@1

    # Restore project
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'custom'
        custom: 'restore'

    # Build project
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'custom'
        custom: 'build'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    # Publish projects to specified folder.
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true
        #modifyOutputPath: true

    - task: PublishBuildArtifacts@1

- stage: Deploy
  displayName: Blazor App Deploy Stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Blazor App Deploy Job
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:

          - task: DownloadBuildArtifacts@1
            inputs:
              downloadPath: $(Build.ArtifactStagingDirectory)

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure App Service'
            inputs:
              azureSubscription: 'SurveyPipelineServiceConnection'
              appType: 'webApp'
              appName: 'SurveyDocUploader'
              package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
              deploymentMethod: 'auto'
